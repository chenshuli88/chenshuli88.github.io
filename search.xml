<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[使用mybatis-generator工具创建mybatis相关代码]]></title>
    <url>%2F2017%2F09%2F18%2Fssm6%2F</url>
    <content type="text"><![CDATA[1.前言 1.1上节已经将ssm框架搭好，这节将使用mybatis-generator生成代码 2.创建数据库 2.1执行创表语句1234567891011121314151617181920SET FOREIGN_KEY_CHECKS=0;-- ------------------------------ Table structure for t_user_info-- ----------------------------DROP TABLE IF EXISTS `t_user_info`;CREATE TABLE `t_user_info` ( `id` int(11) NOT NULL AUTO_INCREMENT, `user_name` varchar(255) DEFAULT NULL COMMENT &apos;用户名&apos;, `nick_name` varchar(255) DEFAULT NULL COMMENT &apos;昵称&apos;, `age` int(11) DEFAULT NULL COMMENT &apos;年龄&apos;, PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT=&apos;用户表&apos;;-- ------------------------------ Records of t_user_info-- ----------------------------INSERT INTO `t_user_info` VALUES (&apos;1&apos;, &apos;test&apos;, &apos;test&apos;, &apos;21&apos;);INSERT INTO `t_user_info` VALUES (&apos;2&apos;, &apos;cookChen&apos;, &apos;cookChen&apos;, &apos;24&apos;);INSERT INTO `t_user_info` VALUES (&apos;3&apos;, &apos;xiaoMing&apos;, &apos;小明&apos;, &apos;18&apos;); 建表完之后如图所示 3.配置mybatis-generator插件 3.1修改pom.xml文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.tmg.cookChen&lt;/groupId&gt; &lt;artifactId&gt;ssm&lt;/artifactId&gt; &lt;packaging&gt;war&lt;/packaging&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;name&gt;ssm Maven Webapp&lt;/name&gt; &lt;url&gt;http://maven.apache.org&lt;/url&gt; &lt;!-- 声明版本 --&gt; &lt;properties&gt; &lt;spring.version&gt;4.3.6.RELEASE&lt;/spring.version&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;!--测试包--&gt; &lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;3.8.1&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;!--spring 包--&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;!-- spring 包 事务 --&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-tx&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-aspects&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-context-support&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-orm&lt;/artifactId&gt; &lt;version&gt;4.1.4.RELEASE&lt;/version&gt; &lt;/dependency&gt; &lt;!-- mybatis 包 --&gt; &lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis&lt;/artifactId&gt; &lt;version&gt;3.2.8&lt;/version&gt; &lt;/dependency&gt; &lt;!--mybatis spring 插件 --&gt; &lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt; &lt;version&gt;1.2.2&lt;/version&gt; &lt;/dependency&gt; &lt;!-- mysql驱动包 --&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;5.1.39&lt;/version&gt; &lt;/dependency&gt; &lt;!--链接池 --&gt; &lt;dependency&gt; &lt;groupId&gt;com.alibaba&lt;/groupId&gt; &lt;artifactId&gt;druid&lt;/artifactId&gt; &lt;version&gt;1.0.29&lt;/version&gt; &lt;/dependency&gt; &lt;!-- log4j --&gt; &lt;dependency&gt; &lt;groupId&gt;log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j&lt;/artifactId&gt; &lt;version&gt;1.2.17&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt; &lt;version&gt;1.7.21&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;1.7.21&lt;/version&gt; &lt;/dependency&gt; &lt;!-- jstl --&gt; &lt;dependency&gt; &lt;groupId&gt;javax.servlet&lt;/groupId&gt; &lt;artifactId&gt;jstl&lt;/artifactId&gt; &lt;version&gt;1.2&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;finalName&gt;ssm&lt;/finalName&gt; &lt;pluginManagement&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt; &lt;version&gt;1.3.2&lt;/version&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;5.1.39&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;configuration&gt; &lt;!--配置文件的路径--&gt; &lt;configurationFile&gt;$&#123;basedir&#125;/src/main/resources/mybatis/generatorConfig.xml&lt;/configurationFile&gt; &lt;overwrite&gt;true&lt;/overwrite&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/pluginManagement&gt; &lt;/build&gt;&lt;/project&gt; 3.2创建generatorConfig.xml文件 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE generatorConfiguration PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;&lt;generatorConfiguration&gt; &lt;context id=&quot;test&quot; targetRuntime=&quot;MyBatis3&quot;&gt; &lt;plugin type=&quot;org.mybatis.generator.plugins.EqualsHashCodePlugin&quot;&gt;&lt;/plugin&gt; &lt;plugin type=&quot;org.mybatis.generator.plugins.SerializablePlugin&quot;&gt;&lt;/plugin&gt; &lt;plugin type=&quot;org.mybatis.generator.plugins.ToStringPlugin&quot;&gt;&lt;/plugin&gt; &lt;commentGenerator&gt; &lt;!-- 这个元素用来去除指定生成的注释中是否包含生成的日期 false:表示保护 --&gt; &lt;!-- 如果生成日期，会造成即使修改一个字段，整个实体类所有属性都会发生变化，不利于版本控制，所以设置为true --&gt; &lt;property name=&quot;suppressDate&quot; value=&quot;true&quot; /&gt; &lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt; &lt;property name=&quot;suppressAllComments&quot; value=&quot;false&quot; /&gt; &lt;/commentGenerator&gt; &lt;!--数据库链接URL，用户名、密码 --&gt; &lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot; connectionURL=&quot;jdbc:mysql://localhost:3306/testbycookchen?useUnicode=true&amp;amp;characterEncoding=UTF-8&quot; userId=&quot;root&quot; password=&quot;root&quot;&gt; &lt;/jdbcConnection&gt; &lt;javaTypeResolver&gt; &lt;!-- This property is used to specify whether MyBatis Generator should force the use of java.math.BigDecimal for DECIMAL and NUMERIC fields, --&gt; &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot; /&gt; &lt;/javaTypeResolver&gt; &lt;!-- 生成模型的包名和位置 --&gt; &lt;javaModelGenerator targetPackage=&quot;com.cookChen.model&quot; targetProject=&quot;target&quot;&gt; &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt; &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot; /&gt; &lt;/javaModelGenerator&gt; &lt;!-- 生成映射文件的包名和位置 --&gt; &lt;sqlMapGenerator targetPackage=&quot;com.test.mapping&quot; targetProject=&quot;target&quot;&gt; &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt; &lt;/sqlMapGenerator&gt; &lt;!-- 生成DAO的包名和位置 --&gt; &lt;javaClientGenerator type=&quot;XMLMAPPER&quot; targetPackage=&quot;com.cookChen.dao&quot; implementationPackage=&quot;com.cookChen.dao.impl&quot; targetProject=&quot;target&quot;&gt; &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt; &lt;/javaClientGenerator&gt; &lt;!-- 要生成哪些表 --&gt; &lt;table tableName=&quot;t_user_info&quot; domainObjectName=&quot;UserInfo&quot; enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot; enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; selectByExampleQueryId=&quot;false&quot;&gt;&lt;/table&gt; &lt;/context&gt;&lt;/generatorConfiguration&gt; 3.3用maven插件生成代码 如图所示，点击IDEA右侧maven窗口 点击Exectue maven Goal 输入”mybatis-generator:generate” 执行完之后 然后在该路径找到代码 拷贝UserInfoMapper.java到src/main/java/com/cookChen/dao下，并重命名为UserInfoDao 拷贝UserInfo.java到src/main/java/com/cookChen/model下 拷贝UserInfoMapper.xml到resources/mapper下，并重命名为t_user_info_SalMap.xml 3.4在controller下新增UserInfoController控制层代码1234567891011121314151617181920212223242526272829303132package com.cookChen.controller;import com.cookChen.model.UserInfo;import com.cookChen.service.UserInfoService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.ModelMap;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;@Controller@RequestMapping(&quot;/user&quot;)public class UserInfoController &#123; @Autowired private UserInfoService userInfoService; /** * 根据用户Id查询名字 * @param modelMap * @param id * @return */ @RequestMapping(&quot;/showName&quot;) public String showUserInfo(ModelMap modelMap, @RequestParam(value = &quot;id&quot;) Integer id)&#123; UserInfo userInfo = userInfoService.getUsers(id); modelMap.addAttribute(&quot;userInfo&quot;, userInfo); return &quot;/user/showInfo&quot;; &#125;&#125; 3.5新增业务层代码 UserInfoService.java12345678package com.cookChen.service;import com.cookChen.model.UserInfo;public interface UserInfoService &#123; UserInfo getUsers(Integer userId);&#125; UserInfoServiceImpl.java1234567891011121314151617181920212223package com.cookChen.service.impl;import com.cookChen.dao.UserInfoDao;import com.cookChen.model.UserInfo;import com.cookChen.service.UserInfoService;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import javax.annotation.Resource;@Service(&quot;userInfoService&quot;)@Transactionalpublic class UserInfoServiceImpl implements UserInfoService&#123; @Resource private UserInfoDao userInfoDao; public UserInfo getUsers(Integer id) &#123; return userInfoDao.selectByPrimaryKey(id); &#125;&#125; 3.6在webapp/WEB-INF/jsp下新建user/showInfo.jsp12345678910111213&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@ page isELIgnored=&quot;false&quot;%&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt; &lt;title&gt;userInfo&lt;/title&gt;&lt;/head&gt;&lt;body&gt;姓名： $&#123;userInfo.nickName&#125;&lt;/body&gt;&lt;/html&gt; 3.7运行项目，访问地址http://localhost:8888/user/showName?id=2，看到如下效果 4.源代码https://github.com/coderChensl/ssmDemo PS：绕坑指南 jsp中的el表达式不起作用，参考http://blog.csdn.net/caixiexin/article/details/6958199 以上就是本次博客全部内容，目前为止，框架大致搭建起来，后面会陆续加入Shiro权限框架，拦截器，redis等内容]]></content>
      <categories>
        <category>干货系列</category>
      </categories>
      <tags>
        <tag>java框架、maven、spring mvc、spring、mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[干货系列1.5--spring+springmvc+mybatis+maven之mybatis]]></title>
    <url>%2F2017%2F09%2F18%2Fssm5%2F</url>
    <content type="text"><![CDATA[1.前言 1.1上节已经将spring加入，接下来加入mybatis 2.配置mybatis 2.1修改pom.xml,引入mybatis的相关jar包以及log4j的相关jar包123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.tmg.cookChen&lt;/groupId&gt; &lt;artifactId&gt;ssm&lt;/artifactId&gt; &lt;packaging&gt;war&lt;/packaging&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;name&gt;ssm Maven Webapp&lt;/name&gt; &lt;url&gt;http://maven.apache.org&lt;/url&gt; &lt;!-- 声明版本 --&gt; &lt;properties&gt; &lt;spring.version&gt;4.3.6.RELEASE&lt;/spring.version&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;!--测试包--&gt; &lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;3.8.1&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;!--spring 包--&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;!-- spring 包 事务 --&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-tx&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-aspects&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-context-support&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;!-- mybatis 包 --&gt; &lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis&lt;/artifactId&gt; &lt;version&gt;3.2.8&lt;/version&gt; &lt;/dependency&gt; &lt;!--mybatis spring 插件 --&gt; &lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt; &lt;version&gt;1.2.2&lt;/version&gt; &lt;/dependency&gt; &lt;!-- mysql驱动包 --&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;5.1.39&lt;/version&gt; &lt;/dependency&gt; &lt;!--链接池 --&gt; &lt;dependency&gt; &lt;groupId&gt;com.alibaba&lt;/groupId&gt; &lt;artifactId&gt;druid&lt;/artifactId&gt; &lt;version&gt;1.0.29&lt;/version&gt; &lt;/dependency&gt; &lt;!-- log4j --&gt; &lt;dependency&gt; &lt;groupId&gt;log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j&lt;/artifactId&gt; &lt;version&gt;1.2.17&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt; &lt;version&gt;1.7.21&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;1.7.21&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;finalName&gt;ssm&lt;/finalName&gt; &lt;/build&gt;&lt;/project&gt; 2.2增加关于mybatis的配置文件 创建如下目录结构 spring-mybatis.xml文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:context=&quot;http://www.springframework.org/schema/context&quot; xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt; &lt;!-- 加载数据源文件 --&gt; &lt;context:property-placeholder location=&quot;classpath*:**/*.properties&quot;/&gt; &lt;!-- 配置数据源 使用的是Druid数据源 --&gt; &lt;bean name=&quot;dataSource&quot; class=&quot;com.alibaba.druid.pool.DruidDataSource&quot; init-method=&quot;init&quot; destroy-method=&quot;close&quot;&gt; &lt;property name=&quot;driverClassName&quot; value=&quot;$&#123;jdbc.driver&#125;&quot;&gt;&lt;/property&gt; &lt;property name=&quot;url&quot; value=&quot;$&#123;jdbc.url&#125;&quot;/&gt; &lt;property name=&quot;username&quot; value=&quot;$&#123;jdbc.userName&#125;&quot;/&gt; &lt;property name=&quot;password&quot; value=&quot;$&#123;jdbc.passWord&#125;&quot;/&gt; &lt;!-- 初始化连接大小 --&gt; &lt;property name=&quot;initialSize&quot; value=&quot;$&#123;jdbc.initialSize&#125;&quot;/&gt; &lt;!-- 连接池最大使用连接数量 --&gt; &lt;property name=&quot;maxActive&quot; value=&quot;$&#123;jdbc.maxActive&#125;&quot;/&gt; &lt;!-- 连接池最小空闲 --&gt; &lt;property name=&quot;minIdle&quot; value=&quot;$&#123;jdbc.minIdle&#125;&quot;/&gt; &lt;!-- 获取连接最大等待时间 --&gt; &lt;property name=&quot;maxWait&quot; value=&quot;$&#123;jdbc.maxWait&#125;&quot;/&gt; &lt;property name=&quot;poolPreparedStatements&quot; value=&quot;true&quot;/&gt; &lt;property name=&quot;maxPoolPreparedStatementPerConnectionSize&quot; value=&quot;33&quot;/&gt; &lt;!-- 用来检测有效sql --&gt; &lt;property name=&quot;validationQuery&quot; value=&quot;$&#123;validationQuery&#125;&quot;/&gt; &lt;property name=&quot;testOnBorrow&quot; value=&quot;false&quot;/&gt; &lt;property name=&quot;testOnReturn&quot; value=&quot;false&quot;/&gt; &lt;property name=&quot;testWhileIdle&quot; value=&quot;true&quot;/&gt; &lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt; &lt;property name=&quot;timeBetweenEvictionRunsMillis&quot; value=&quot;60000&quot;/&gt; &lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt; &lt;property name=&quot;minEvictableIdleTimeMillis&quot; value=&quot;25200000&quot;/&gt; &lt;!-- 打开removeAbandoned功能 --&gt; &lt;property name=&quot;removeAbandoned&quot; value=&quot;true&quot;/&gt; &lt;!-- 1800秒，也就是30分钟 --&gt; &lt;property name=&quot;removeAbandonedTimeout&quot; value=&quot;1800&quot;/&gt; &lt;!-- 关闭abanded连接时输出错误日志 --&gt; &lt;property name=&quot;logAbandoned&quot; value=&quot;true&quot;/&gt; &lt;!-- 监控数据库 --&gt; &lt;property name=&quot;filters&quot; value=&quot;mergeStat&quot;/&gt; &lt;/bean&gt; &lt;!-- 配置sqlSessionFactory--&gt; &lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt; &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot; /&gt; &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis/mybatis.xml&quot; /&gt; &lt;property name=&quot;mapperLocations&quot; value=&quot;classpath*:mapper/*.xml&quot; /&gt; &lt;!-- 设置别名 --&gt; &lt;!-- &lt;property name=&quot;typeAliasesPackage&quot; value=&quot;com.cookChen.model&quot; /&gt; --&gt; &lt;/bean&gt; &lt;!-- 自己实现DAO层 --&gt; &lt;bean id=&quot;sqlSession&quot; class=&quot;org.mybatis.spring.SqlSessionTemplate&quot;&gt; &lt;constructor-arg index=&quot;0&quot; ref=&quot;sqlSessionFactory&quot;/&gt; &lt;/bean&gt; &lt;!-- 扫描dao包中的类--&gt; &lt;bean class=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt; &lt;property name=&quot;basePackage&quot; value=&quot;com.cookChen.dao&quot; /&gt; &lt;!-- &lt;property name=&quot;sqlSessionFactoryBeanName&quot; ref=&quot;sqlSessionFactory&quot;/&gt; --&gt; &lt;/bean&gt; &lt;!-- 配置 事务--&gt; &lt;bean id=&quot;transactionManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt; &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;&gt;&lt;/property&gt; &lt;/bean&gt;&lt;/beans&gt; mybatis.xml文件1234567891011121314&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE configuration PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;&lt;configuration&gt; &lt;settings&gt; &lt;setting name=&quot;logImpl&quot; value=&quot;LOG4J&quot;/&gt; &lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;true&quot; /&gt; &lt;!-- 开启二级缓存 &lt;setting name=&quot;cacheEnabled&quot; value=&quot;true&quot;/&gt; --&gt; &lt;!-- 开启延迟加载 &lt;setting name=&quot;lazyLoadingEnabled&quot; value=&quot;true&quot; /&gt; --&gt; &lt;/settings&gt;&lt;/configuration&gt; 2.3增加项目配置文件jdbc.properties和log4j.properties jdbc.properties12345678910#数据库配置jdbc.driver=com.mysql.jdbc.Driverjdbc.url=jdbc:mysql://localhost:3306jdbc.userName=rootjdbc.passWord=rootjdbc.maxActive=5jdbc.minIdle=5jdbc.maxWait=6000jdbc.initialSize=1validationQuery=SELECT 1 log4j.properties1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374# This is the configuring for logging displayed in the Application Server# 优先等级(DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL)log4j.rootLogger=INFO,console# 指定com.cn.huiju包下的所有类的等级为DEBUGlog4j.logger.com.tmg=DEBUG# 所有控制台信息日志log4j.appender.console.Encoding=UTF-8# 输出到日志文件#log4j.appender.console=org.apache.log4j.RollingFileAppender#log4j.appender.console.File=D:/LOG/TENEMENT/console/console.log#log4j.appender.console.MaxFileSize=102400KB#log4j.appender.console.MaxBackupIndex=20# 输出到控制台信息log4j.appender.console=org.apache.log4j.ConsoleAppenderlog4j.appender.console.layout=org.apache.log4j.PatternLayoutlog4j.appender.console.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; [%t] %5p (%c:%L) %x - %m%n# 所有请求日志log4j.logger.CI=DEBUG,Rlog4j.appender.R.Encoding=UTF-8log4j.appender.R=org.apache.log4j.RollingFileAppenderlog4j.appender.R.File=D:/LOG/TENEMENT/request/log.loglog4j.appender.R.MaxFileSize=10240KBlog4j.appender.R.MaxBackupIndex=10log4j.appender.R.layout=org.apache.log4j.PatternLayoutlog4j.appender.R.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %-5p [%t] %c.%M(%L) - %m%n# global filter ciErrorlog4j.logger.ciError=DEBUG,Elog4j.appender.E.Encoding=UTF-8log4j.appender.E=org.apache.log4j.RollingFileAppenderlog4j.appender.E.File=D:/LOG/TENEMENT/ci-err/ci-err.loglog4j.appender.E.MaxFileSize=102400KBlog4j.appender.E.MaxBackupIndex=20log4j.appender.E.layout=org.apache.log4j.PatternLayoutlog4j.appender.E.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %-5p [%t] %c.%M(%L) - %m%n# login loglog4j.logger.loginLog=DEBUG,Llog4j.appender.L.Encoding=UTF-8log4j.appender.L=org.apache.log4j.RollingFileAppenderlog4j.appender.L.File=D:/LOG/TENEMENT/login/loginLog.loglog4j.appender.L.MaxFileSize=10240KBlog4j.appender.L.MaxBackupIndex=10log4j.appender.L.layout=org.apache.log4j.PatternLayoutlog4j.appender.L.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %-5p [%t] %c.%M(%L) - %m%n# validateTest loglog4j.logger.validateTest=DEBUG,Vlog4j.appender.V.Encoding=UTF-8log4j.appender.V=org.apache.log4j.RollingFileAppenderlog4j.appender.V.File=D:/LOG/TENEMENT/validate/validateTest.loglog4j.appender.V.MaxFileSize=10240KBlog4j.appender.V.MaxBackupIndex=10log4j.appender.V.layout=org.apache.log4j.PatternLayoutlog4j.appender.V.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %-5p [%t] %c.%M(%L) - %m%n# monitor SQL executor time loglog4j.logger.mon=DEBUG,Mlog4j.appender.M.Encoding=UTF-8log4j.appender.M=org.apache.log4j.RollingFileAppenderlog4j.appender.M.File=D:/LOG/TENEMENT/mon/mon.loglog4j.appender.M.MaxFileSize=102400KBlog4j.appender.M.MaxBackupIndex=20log4j.appender.M.layout=org.apache.log4j.PatternLayoutlog4j.appender.M.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %-5p [%t] %c.%M(%L) - %m%nlog4j.logger.noModule=FATAL###显示SQL语句部分log4j.logger.org.apache.ibatis=debug log4j.logger.java.sql=debuglog4j.logger.com.cookChen.dao = TRACE 2.4修改web.xml引入mybatis配置文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354&lt;!DOCTYPE web-app PUBLIC &quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot; &quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot; &gt;&lt;web-app&gt; &lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt; &lt;context-param&gt; &lt;param-name&gt;log4jConfigLocation&lt;/param-name&gt; &lt;param-value&gt;classpath:properties/log4j.properties&lt;/param-value&gt; &lt;/context-param&gt; &lt;!-- 加载Srping配置文件 --&gt; &lt;context-param&gt; &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt; &lt;param-value&gt; classpath:/mybatis/spring-mybatis.xml, classpath:/spring/applicationContext.xml &lt;/param-value&gt; &lt;/context-param&gt; &lt;!-- 加载Spring框架中的log4j监听器Log4jConfigListener --&gt; &lt;listener&gt; &lt;listener-class&gt;org.springframework.web.util.Log4jConfigListener&lt;/listener-class&gt; &lt;/listener&gt; &lt;!-- Spring 监听 --&gt; &lt;listener&gt; &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt; &lt;/listener&gt; &lt;!-- 防止spring内存溢出监听器 --&gt; &lt;listener&gt; &lt;listener-class&gt;org.springframework.web.util.IntrospectorCleanupListener&lt;/listener-class&gt; &lt;/listener&gt; &lt;!-- SpringMVC配置 --&gt; &lt;servlet&gt; &lt;servlet-name&gt;spring mvc&lt;/servlet-name&gt; &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt; &lt;!-- 自定义spring mvc的配置文件名称和路径 --&gt; &lt;init-param&gt; &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt; &lt;param-value&gt;classpath:/springmvc/spring-mvc-servlet.xml&lt;/param-value&gt; &lt;/init-param&gt; &lt;/servlet&gt; &lt;!-- spring mvc 请求后缀 --&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;spring mvc&lt;/servlet-name&gt; &lt;url-pattern&gt;/&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; &lt;welcome-file-list&gt; &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt; &lt;/welcome-file-list&gt;&lt;/web-app&gt; 2.5运行项目，没有报错信息，可以正常跑起来 3.源代码https://github.com/coderChensl/ssmDemo 以上就是本次的全部内容，下一章会使用mybatis-generator工具创建mybatis相关代码]]></content>
      <categories>
        <category>干货系列</category>
      </categories>
      <tags>
        <tag>java框架、maven、spring mvc、spring、mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[干货系列1.4--spring+springmvc+mybatis+maven之spring]]></title>
    <url>%2F2017%2F09%2F18%2Fssm4%2F</url>
    <content type="text"><![CDATA[1.前言 1.1上节已经讲解springmvc项目的搭建，接下来加入spring 2.配置spring 2.1修改pom.xml，引入jar包123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.tmg.cookChen&lt;/groupId&gt; &lt;artifactId&gt;ssm&lt;/artifactId&gt; &lt;packaging&gt;war&lt;/packaging&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;name&gt;ssm Maven Webapp&lt;/name&gt; &lt;url&gt;http://maven.apache.org&lt;/url&gt; &lt;!-- 声明版本 --&gt; &lt;properties&gt; &lt;spring.version&gt;4.3.6.RELEASE&lt;/spring.version&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;!--测试包--&gt; &lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;3.8.1&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;!--spring 包--&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;!-- spring 包 事务 --&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-tx&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-aspects&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-context-support&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;finalName&gt;ssm&lt;/finalName&gt; &lt;/build&gt;&lt;/project&gt; 2.2修改applicationContext.xml,配置spring12345678910111213141516&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:context=&quot;http://www.springframework.org/schema/context&quot; xsi:schemaLocation=&quot; http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd &quot;&gt; &lt;!-- 采用注解的方式配置bean --&gt; &lt;context:annotation-config/&gt; &lt;!-- 配置要扫描的包 --&gt; &lt;context:component-scan base-package=&quot;com.cookChen&quot;&gt;&lt;/context:component-scan&gt;&lt;/beans&gt; 2.3增加数据库访问层dao层代码12345678910package com.cookChen.dao;import org.springframework.stereotype.Repository;@Repositorypublic class TestDao &#123; public void test()&#123; System.out.println(&quot;I&apos;m dao&quot;); &#125;&#125; 2.4增加业务层service层代码12345package com.cookChen.service;public interface TestService &#123; public void test();&#125; 2.5增加业务层实现层serviceimp12345678910111213141516171819202122package com.cookChen.service.impl;import com.cookChen.dao.TestDao;import com.cookChen.service.TestService;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import javax.annotation.Resource;@Service(&quot;TestService&quot;)@Transactionalpublic class TestServiceImpl implements TestService&#123; @Resource private TestDao testDao; public void test() &#123; System.out.println(&quot;I&apos;m service&quot;); testDao.test(); &#125;&#125; 2.6修改控制层controller代码123456789101112131415161718192021222324252627package com.cookChen.controller;import com.cookChen.service.TestService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.servlet.ModelAndView;@Controllerpublic class TestController &#123; @Autowired private TestService testService; /** * 去第一页 * * @return */ @RequestMapping(&quot;/toPageOne&quot;) public ModelAndView toPageOne() &#123; System.out.println(&quot;I&apos;m controller&quot;); testService.test(); return new ModelAndView(&quot;pageOne&quot;); &#125;&#125; 2.7运行项目，在页面点击链接，控制台会打印出 3.源代码https://github.com/coderChensl/ssmDemo 以上就是本次的全部内容，下一章会加入mybatis。。。]]></content>
      <categories>
        <category>干货系列</category>
      </categories>
      <tags>
        <tag>java框架、maven、spring mvc、spring</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[干货系列1.3--spring+springmvc+mybatis+maven之springmvc]]></title>
    <url>%2F2017%2F09%2F15%2Fssm3%2F</url>
    <content type="text"><![CDATA[1.前言 1.1博主也是一名正在学习的coder，本博客是在学习他人优秀的博客后加上自己的一点总结，有什么问题可以留言我们相互讨论，博主会不定期回复 1.2本系列是面向初级开发者，主要是搭建起一套目前流行的java框架 1.3上节已经讲解maven项目的搭建，接下来加入spring mvc 2.配置 2.1修改pom.xml12345678910111213141516171819202122232425262728293031323334353637 &lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.tmg.cookChen&lt;/groupId&gt; &lt;artifactId&gt;ssm&lt;/artifactId&gt; &lt;packaging&gt;war&lt;/packaging&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;name&gt;ssm Maven Webapp&lt;/name&gt; &lt;url&gt;http://maven.apache.org&lt;/url&gt; &lt;!-- 声明版本 --&gt; &lt;properties&gt; &lt;spring.version&gt;4.3.6.RELEASE&lt;/spring.version&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;!--测试包--&gt; &lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;3.8.1&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;!--spring 包--&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;finalName&gt;ssm&lt;/finalName&gt; &lt;/build&gt;&lt;/project&gt; 第一次需要去下jar包，所有会有点慢。。。 2.2修改web.xml1234567891011121314151617181920212223242526272829303132333435 &lt;!DOCTYPE web-app PUBLIC &quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot; &quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot; &gt;&lt;web-app&gt; &lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt; &lt;!-- 加载Srping配置文件 --&gt; &lt;context-param&gt; &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt; &lt;param-value&gt;classpath:/spring/applicationContext.xml&lt;/param-value&gt; &lt;/context-param&gt; &lt;!-- Spring 监听 --&gt; &lt;listener&gt; &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt; &lt;/listener&gt; &lt;!-- SpringMVC配置 --&gt; &lt;servlet&gt; &lt;servlet-name&gt;spring mvc&lt;/servlet-name&gt; &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt; &lt;!-- 自定义spring mvc的配置文件名称和路径 --&gt; &lt;init-param&gt; &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt; &lt;param-value&gt;classpath:/springmvc/spring-mvc-servlet.xml&lt;/param-value&gt; &lt;/init-param&gt; &lt;/servlet&gt; &lt;!-- spring mvc 请求后缀 --&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;spring mvc&lt;/servlet-name&gt; &lt;url-pattern&gt;/&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; &lt;welcome-file-list&gt; &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt; &lt;/welcome-file-list&gt;&lt;/web-app&gt; 2.3建以下目录结构 2.3修改spring-mvc-servlet.xml12345678910111213141516171819202122 &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:context=&quot;http://www.springframework.org/schema/context&quot; xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt; &lt;!-- 激活@Controller模式 --&gt; &lt;mvc:annotation-driven/&gt; &lt;!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 --&gt; &lt;context:component-scan base-package=&quot;com.cookChen.controller&quot;/&gt; &lt;!-- 定义跳转的文件的前后缀 ，视图模式配置--&gt; &lt;bean class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&gt; &lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/jsp/&quot; /&gt; &lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot; /&gt; &lt;/bean&gt;&lt;/beans&gt; 2.4修改applicationContext.xml123456789 &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot; http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd&quot;&gt;&lt;/beans&gt; 2.5在WEB-INF/jsp下新建pageOne.jsp文件 2.6修改index.jsp中的内容 2.7新建控制层代码 2.8部署项目到tomcat，然后run或者debug，看到如下效果 点击go to page one ，跳转到pageone页面 3.源代码https://github.com/coderChensl/ssmDemo 以上就是本次的全部内容，下一章会加入spring。。。]]></content>
      <categories>
        <category>干货系列</category>
      </categories>
      <tags>
        <tag>java框架、maven、spring mvc</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[干货系列1.2--spring+springmvc+mybatis+maven之idea搭建maven项目结构]]></title>
    <url>%2F2017%2F09%2F15%2Fssm2%2F</url>
    <content type="text"><![CDATA[1.前言 1.1博主也是一名正在学习的coder，本博客是在学习他人优秀的博客后加上自己的一点总结，有什么问题可以留言我们相互讨论，博主会不定期回复 1.2本系列是面向初级开发者，主要是搭建起一套目前流行的java框架 1.3上节已经讲解maven的环境配置，本节将介绍用idea搭建maven项目结构 2.搭建maven项目结构 2.1打开IDEA，依次打开File&gt;&gt;Project，找到Maven 2.2勾选Create from archetype,找到org.apache.maven.archetypes:maven-archetype-webapp,点击Next 2.3按照规范填入GroupId,ArtifactId 2.4配置maven路径 2.5填入Project name 2.6点击Finish完成项目的创建 2.7完善目录结构]]></content>
      <categories>
        <category>干货系列</category>
      </categories>
      <tags>
        <tag>java框架、maven</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[干货系列1.1--spring+springmvc+mybatis+maven之maven环境配置]]></title>
    <url>%2F2017%2F09%2F15%2Fssm1%2F</url>
    <content type="text"><![CDATA[1.前言 1.1博主也是一名正在学习的coder，本博客是在学习他人优秀的博客后加上自己的一点总结，有什么问题可以留言我们相互讨论，博主会不定期回复 1.2本系列是面向初级开发者，主要是搭建起一套目前流行的java框架 2.maven的作用 2.1省去开发过程中手动去找jar包的麻烦 2.2统一开发规范与工具，统一管理jar包 3.环境配置 3.1在安装配置前，确保已有jdk环境 3.2到官网下载maven,如图所示 3.3下载完成后，解压到你想要的目录里面，然后配置环境变量，和JDK的环境变量配置类似 3.4配置完成后，Windows+R输入cmd打开命令窗口，输入mvn -v,如果有下面的内容就表示配置成功 3.5maven的默认仓库是在 C:\Users\Administrator.m2\repository 目录下，防止占C盘的内存以及系统挂了以后又要重新下载，我们把本地仓库修改成我们自己的路径，在D盘新建文件夹maven_repository，然后找到你放maven的目录，打开D:\apache-maven-3.5.0\conf\settings.xml文件，修改相应的路径 4.IDEA集成maven 4.1打开IDEA软件，点击File,选择settings,搜索maven,如下图 4.2修改Maven home directory:的路径为自己的maven路径，User settings files为自己的settings.xml文件，勾选Override，如图所示 以上就是maven的环境配置，希望可以帮到您，谢谢！]]></content>
      <categories>
        <category>干货系列</category>
      </categories>
      <tags>
        <tag>java框架、maven</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IDE使用技巧]]></title>
    <url>%2F2017%2F09%2F14%2FIDE%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[子曰：“工欲善其事，必先利其器。”要想更加高效的编程，掌握好IDE的快捷键是很有必要的，下面是一些快捷键的使用↓↓↓ 操作 Eclipse IntelliJ IDEA HBuilder 删除当前行 Ctrl+D Ctrl+Y Ctrl+D 复制当前行 Ctrl+Alt+↑或者↓ Ctrl+D Ctrl+Shift+R 整理代码 Ctrl+Shift+F Ctrl+Alt+L Ctrl+Shift+F 查找 Ctrl+F Ctrl+F/Ctrl+R查找替换 Ctrl+F 搜索被选中内容的所有引用处 Ctrl+Alt+H Alt+F7 转换字母大小写 Ctrl+Shift+X Ctrl+Shift+Y Ctrl+Shift+U Ctrl+Shift+X Ctrl+Shift+Y 行注释/去掉行注释 Ctrl+/ Ctrl+/ Ctrl+/ 块注释 Ctrl+Shift+/ Ctrl+Shift+/ Ctrl+Shift+/ 去掉块注释 Ctrl+Shift+\ Ctrl+Shift+/ Ctrl+Shift+/ 选择所有 Ctrl+A Ctrl+A Ctrl+A debug下单步进入 F5 F7 debug下单步跳过 F6 F8 debug下跳过 F8 F9 Getters And Setters,toString,Constructor 右键&gt;&gt;Source Alt+Insert 快速修复错误 Ctrl+1 Alt+Enter 自动代码补全 Alt+/ Ctrl+J Alt+/ 整理import Ctrl + Shift + O Ctrl + Alt + O 撤销 Ctrl + Z Ctrl + Z Ctrl + Z 恢复 Ctrl + Y Ctrl + Shift + Z Ctrl + Y 以上只是博主平时用的比较多的快捷键，当然他们还有很多其他的快捷键，如果有兴趣，可以去尝试了解一下。]]></content>
      <categories>
        <category>干货系列</category>
      </categories>
      <tags>
        <tag>eclipse、IDEA、HBuilder</tag>
      </tags>
  </entry>
</search>
